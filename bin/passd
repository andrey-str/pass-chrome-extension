#!/usr/bin/env ruby

require 'json'
require 'webrick'

class PassServlet < WEBrick::HTTPServlet::AbstractServlet
  def usernames(domain)
    Dir[File.join ENV['HOME'], '.password-store', '**', '*.gpg'].grep /#{domain}/
  end

  def password(username)
    `pass #{username}`
  end

  def do_GET(req, res)
    if req.path.start_with? '/domain/'
      usernames = usernames req.path.split('/')[2]
      usernames.map! { |u| u.gsub(File.join(ENV['HOME'], '.password-store', ''), '').gsub('.gpg', '') }

      res.status = 200
      res['Content-Type'] = 'application/json'
      res['Access-Control-Allow-Origin'] = '*'
      items = usernames.map { |item| { username: item.split('/').last, path: item } }
      res.body = JSON.dump items
    elsif req.path.start_with? '/pass/'
      res.status = 200
      res['Content-Type'] = 'text/plain'
      res['Access-Control-Allow-Origin'] = '*'
      res.body = password req.path.split('/')[2..-1].join('/')
    else
      [404, {}, []]
    end
  end
end

options = {
  BindAddress: '127.0.0.1',
  Port: 3131
}

server = WEBrick::HTTPServer.new options

server.mount '/', PassServlet

%w(INT TERM).each do |sig|
  trap(sig) { server.shutdown }
end

server.start
